.\" Automatically generated from an mdoc input file.  Do not edit.
.TH "SHELL" "1" "January 14, 2022" "Unix" "General Commands Manual"
.nh
.if n .ad l
.SH "NAME"
\fBshell\fR
\- Creates a temporary interactive shell session in a disposable working directory
.SH "SYNOPSIS"
.HP 6n
\fBshell\fR
[\fB\-fkqSvV\fR]
[\fB\-d\fR\ \fIdirectory\fR\ |\ \fB\-s\fR\ \fIdirectory\fR]
[\fIshell\fR\ [\fI...\fR]]
.SH "DESCRIPTION"
The
\fBshell\fR
utility creates an interactive shell session with a clean environment
and with an empty working directory.
.PP
By specifying a specific
\fIshell\fR
on the command line, a shell other than the user's login shell may be
invoked.
If a specific shell is not requested, the
\fRSHELL\fR
environment variable will be used to infer what shell to start.
.PP
The basename of the named
\fIshell\fR
must correspond to a valid login shell and the actual shell that is
started will always be taken from the list of valid login shells (by
matching the basename of the specified
\fIshell\fR,
or
\fR$SHELL\fR,
against the basenames of
the allowed login shells).
This behaviour may be bypassed by using the
\fB\-f\fR
command line option.
.PP
Any operands present after the name of the
\fIshell\fR
will be passed as is to the shell in question.
.PP
If
\fBshell\fR
(this utility,
\fInot\fR
the interactive shell process) receives the USR1 signal, the temporary
working directory will not be deleted when the shell session terminates
(as if
\fB\-k\fR
had been used from the start).
.PP
The options are as follows (note that some are dependent on their
relative position on the command line):
.TP 8n
\fB\-d\fR \fIdirectory\fR
Use the specified directory rather than a new temporary directory.
This directory will not be deleted when the shell session terminates.
This option implies the
\fB\-k\fR
option, and overrides any earlier
\fB\-s\fR
option.
.TP 8n
\fB\-f\fR
Force the execution of the given executable, even if it is not a valid
login shell on the current system.
The executable needs to be specified with an absolute path.
.TP 8n
\fB\-k\fR
Keep the temporary directory around after terminating the shell session.
.TP 8n
\fB\-q\fR
Be quiet.
Don't output informational messages.
Overrides any earlier use of
\fB\-v\fR.
.TP 8n
\fB\-s\fR \fIdirectory\fR
Pre-populate the temporary directory with the contents of the named
\(lqskeleton directory\(rq.
This will copy the whole directory structure rooted in the specified
directory to the temporary working directory.
This option overrides any earlier
\fB\-d\fR
option and the value of the
\fRSHELL_SKEL\fR
environment variable.
.TP 8n
\fB\-S\fR
Do not pre-populate the temporary directory with the contents of a
\(lqskeleton directory\(rq,
even if the
\fB\-s\fR
option was used earlier on the command line or the
\fRSHELL_SKEL\fR
environment variable is set.
.TP 8n
\fB\-v\fR
Be verbose.
Output informational messages.
This is the default behaviour.
Overrides any earlier use of
\fB\-q\fR.
.TP 8n
\fB\-V\fR
Output version information and immediately terminate.
.SH "ENVIRONMENT"
\fBshell\fR
uses the following environment variables:
.TP 8n
\fRSHELL\fR
Used to determine what shell to start if a specific
\fIshell\fR
is not specified on the command line.
If this variable is unset or empty, then
\fB/bin/sh\fR
will be used instead.
.TP 8n
\fRSHELL_SKEL\fR
Directory to automatically pre-populate the temporary working directory with.
This environment variable is not used if any of the
\fB\-d\fR, \fB\-s\fR,
or
\fB\-S\fR
options are used on the command line.
.TP 8n
\fRTMPDIR\fR
Directory in which to create the working directory when the
\fB\-d\fR
option is not used.
This variable is used by
\fBmktemp\fR
which will revert to use
\fI/tmp\fR
if the variable is not set.
Note: Setting this variable in the environment may not have any effect
on macOS.
.PP
\fBshell\fR
clears the environment of the interactive shell that it starts, but
also sets the following environment variables:
.TP 8n
\fRHOME\fR
Set to the working directory where the shell is started.
.TP 8n
\fRPATH\fR
Set to the output of
\(lq\fBgetconf PATH\fR\(rq.
.TP 8n
\fRSHELL\fR
Set to the absolute path of the real shell executable.
This may be different from the
\fIshell\fR
mentioned on the command line as the actual shell used will be picked
from the list of valid login shells (unless
\fB\-f\fR
is used).
.TP 8n
\fRTERM\fR
Carried over from the parent environment.
.SH "FILES"
.TP 8n
\fI/etc/shells\fR
Used as a source for valid login shells on systems where
\(lq\fBgetent shells\fR\(rq
does not work.
.SH "EXAMPLES"
Start a new shell in a new temporary directory:
.nf
.sp
.RS 6n
$ shell
shell: info: Starting /bin/ksh in /tmp/shell-ksh.mJMHFTFE
$ exit
shell: info: Removing /tmp/shell-ksh.mJMHFTFE
.RE
.fi
.PP
Start a new
\fBdash\fR
shell in a temporary directory:
.nf
.sp
.RS 6n
$ shell dash
shell: info: Starting /usr/local/bin/dash in /tmp/shell-dash.V7zU6EtZ
$ exit
shell: info: Removing /tmp/shell-dash.V7zU6EtZ
.RE
.fi
.PP
Start a new
\fBbash\fR
shell in a specific directory:
.nf
.sp
.RS 6n
$ shell -d "$HOME/testing" bash
shell: info: Starting /usr/local/bin/bash in /home/myself/testing
$ exit
exit
shell: info: Leaving /home/myself/testing in place
.RE
.fi
.PP
Start
\fBksh\fR
as a login shell and pre-populate the temporary directory with the
contents of
\fI$HOME/skel\fR.
Note, starting the
\fBksh\fR
shell as a login shell will in this case make it execute the
\fI.profile\fR
file copied from
\fI$HOME/skel\fR.
.nf
.sp
.RS 6n
$ shell -s "$HOME/skel" ksh -l
shell: info: Copying /home/myself/skel into /tmp/shell-ksh.ngEwbcpD
shell: info: Starting /bin/ksh in /tmp/shell-ksh.ngEwbcpD
$ ls -la
total 36
drwxr-xr-x   2 myself  wheel  512 Apr 15 12:55 .
drwxrwxrwt  28 root    wheel  512 Apr 21 14:15 ..
-rw-r--r--   1 myself  wheel   87 Nov  1 19:14 .Xdefaults
-rw-r--r--   1 myself  wheel  771 Feb  9 10:18 .cshrc
-rw-r--r--   1 myself  wheel  101 Nov  1 19:14 .cvsrc
-rw-r--r--   1 myself  wheel  359 Nov  1 19:14 .login
-rw-r--r--   1 myself  wheel  175 Nov  1 19:14 .mailrc
-rw-r--r--   1 myself  wheel  215 Feb  9 10:18 .profile
-rw-r--r--   1 myself  wheel  108 Apr 15 12:50 .vimrc
$ exit
shell: info: Removing /tmp/shell-ksh.ngEwbcpD
.RE
.fi
.PP
Start a POSIX-ly correct
\fByash\fR
shell as another user.
.nf
.sp
.RS 6n
$ su testuser -c 'shell yash --posixly-correct'
Password:
shell: info: Starting /usr/local/bin/yash in /tmp/shell-yash.yrSSGISG
$ id
uid=1001(testuser) gid=1001(testuser) groups=1001(testuser)
$ exit
shell: info: Removing /tmp/shell-yash.yrSSGISG
.RE
.fi
.SH "SEE ALSO"
mktemp(1)
.SH "AUTHORS"
Andreas Kusalananda K\[:a]h\[:a]ri <\fIandreas.kahari@abc.se\fR>
.SH "CAVEATS"
For Solaris, the list of valid login shells is taken from the
\(lq\fBshells(4)\fR\(rq
manual on a vanilla Solaris 11.4 system.
This is because Solaris lacks
\(lq\fBgetent shells\fR\(rq
and may also lack the
\fI/etc/shells\fR
file.
The
\fI/etc/shells\fR
file will still be used if it exists.
