.TH "SHELL" "1" "April 18, 2018" "Unix" "General Commands Manual"
.nh
.if n .ad l
.SH "NAME"
\fBshell\fR
\- Creates a temporary interactive shell session in a disposable working directory
.SH "SYNOPSIS"
.HP 6n
\fBshell\fR
[\fB\-f\fR]
[\fB\-d\fR\ \fIdirectory\fR\ |\ \fB\-k\fR]
[\fIshell\fR\ [\fI...\fR]]
.br
.PD 0
.HP 6n
\fBshell\fR
[\fB\-f\fR]
[\fB\-s\fR\ \fIdirectory\fR]
[\fB\-k\fR]
[\fIshell\fR\ [\fI...\fR]]
.br
.HP 6n
\fBshell\fR
\fB\-v\fR
.PD
.SH "DESCRIPTION"
The
\fBshell\fR
utility creates an interactive shell session with a clean environment
and with an empty working directory.
.PP
By specifying a specific
\fIshell\fR
on the command line, a shell other than the user's login shell may be
invoked.
If a specific shell is not requested, the
\fRSHELL\fR
environment variable will be used to infer what shell to start.
.PP
The basename of the named
\fIshell\fR
must correspond to a valid login shell and the actual shell that is
started will always be taken from the list of valid login shells (by
matching the basename of the specified
\fIshell\fR,
or
\fR$SHELL\fR,
against the basenames of
the allowed login shells).
This behaviour may be bypassed by using the
\fB\-f\fR
command line option.
.PP
Any operands present after the name of the
\fIshell\fR
will be passed as is to the shell in question.
.PP
The options are as follows:
.TP 8n
\fB\-d\fR \fIdirectory\fR
Use the specified directory rather than a new temporary directory.
If the directory does not already exist, it will be created.
This directory will not be deleted when the shell session terminates.
This option implies the
\fB\-k\fR
option, and conflicts with the
\fB\-s\fR
option.
.TP 8n
\fB\-f\fR
Force the execution of the given command, even if it is not a valid
login shell on the current system.
.TP 8n
\fB\-k\fR
Keep the temporary directory around after terminating the shell session.
.TP 8n
\fB\-s\fR \fIdirectory\fR
Pre-populate the temporary directory with the contents of the named
directory.
This will copy the whole directory structure rooted in the specified
directory to the temporary working directory.
This option conflicts with the
\fB\-d\fR
option.
.TP 8n
\fB\-v\fR
Output version information and immediately terminate.
.SH "ENVIRONMENT"
\fBshell\fR
uses the following environment variables:
.TP 8n
\fRTMPDIR\fR
Directory in which to create the working directory when the
\fB\-d\fR
option is not used.
This variable is used by
\fBmktemp\fR
which will revert to use
\fI/tmp\fR
if the variable is not set.
.TP 8n
\fRSHELL\fR
Used to determine what shell to start if a specific
\fIshell\fR
is not specified on the command line.
.PP
\fBshell\fR
clears the environment of the interactive shell that it starts, but
also sets the following environment variables:
.TP 8n
\fRHOME\fR
Set to the working directory where the shell is started.
.TP 8n
\fRPATH\fR
Set to the output of
\(lq\fBgetconf PATH\fR\(rq.
.TP 8n
\fRPS1\fR
Set to the string
\(oq$\ \(cq
(dollar-sign and space).
Note that some shells ignore this variable if passed from the parent
environment.
.TP 8n
\fRSHELL\fR
Set to the absolute path of the real shell executable.
This may be different from the
\fIshell\fR
mentioned on the command line as the actual shell used will always be
picked from the list of valid login shells (unless
\fB\-f\fR
is used).
.TP 8n
\fRTERM\fR
Carried over from the parent environment.
.SH "FILES"
.TP 8n
\fI/etc/shells\fR
Used as a source for valid login shells on systems where
\(lq\fBgetent shells\fR\(rq
does not work.
.SH "EXAMPLES"
Start a new shell in a new temporary directory:
.nf
.sp
.RS 6n
$ shell
Starting /bin/ksh in /tmp/shell-ksh.lDv4uX48
$ exit
Removing /tmp/shell-ksh.lDv4uX48
.RE
.fi
.PP
Start a new
\fBksh93\fR
shell in a temporary directory:
.nf
.sp
.RS 6n
$ shell ksh93
Starting /usr/local/bin/ksh93 in /tmp/shell-ksh93.oct61lxx
myself:/tmp/shell-ksh93.oct61lxx:1$ exit
Removing /tmp/shell-ksh93.oct61lxx
.RE
.fi
.PP
Start a new
\fBbash\fR
shell in a specific directory:
.nf
.sp
.RS 6n
$ shell -d "$HOME/testing" bash
Starting /usr/local/bin/bash in /home/myself/testing
$ exit
Leaving /home/myself/testing in place
.RE
.fi
.PP
Start
\fBksh\fR
as a login shell and pre-populate the temporary directory with the
contents of
\fI$HOME/skel\fR.
Note, starting the
\fBksh\fR
shell as a login shell will in this case make it execute the
\fI.profile\fR
file copied from
\fI$HOME/skel\fR.
.nf
.sp
.RS 6n
$ shell -s "$HOME/skel" ksh -l
Copying /home/myself/skel into /tmp/shell-ksh.4DzEG6qr
Starting /bin/ksh in /tmp/shell-ksh.4DzEG6qr
$ ls -la
total 16
drwx------  3 myself  wheel  512 Feb  9 10:18 .
drwxrwxrwt  4 root    wheel  512 Apr  8 18:49 ..
-rw-r--r--  1 myself  wheel   87 Nov  1 19:14 .Xdefaults
-rw-r--r--  1 myself  wheel  771 Feb  9 10:18 .cshrc
-rw-r--r--  1 myself  wheel  101 Nov  1 19:14 .cvsrc
-rw-r--r--  1 myself  wheel  359 Nov  1 19:14 .login
-rw-r--r--  1 myself  wheel  175 Nov  1 19:14 .mailrc
-rw-r--r--  1 myself  wheel  215 Feb  9 10:18 .profile
$ exit
Removing /tmp/shell-ksh.4DzEG6qr
.RE
.fi
.SH "SEE ALSO"
mktemp(1)
.SH "AUTHORS"
Andreas Kusalananda K\[:a]h\[:a]ri <\fIandreas.kahari@nbis.se\fR>
.SH "CAVEATS"
For Solaris, the list of valid login shells is taken from the
shells(4)
manual on a vanilla Solaris 11.4 system.
This is because Solaris lacks
\(lq\fBgetent shells\fR\(rq
and may also lack the
\fI/etc/shells\fR
file.
The
\fI/etc/shells\fR
file will still be used if it exists.
